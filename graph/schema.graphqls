scalar Date

type Currency {
  value: Int!
  currency: String!
}

type Security {
  id: String!
  displayName: String!
  quoteProvider: String
  listedAs: [ListedSecurity!]
}

type ListedSecurity {
  ticker: String!
  currency: String!
  security: Security!
  latestQuote: Currency
  latestQuoteTimestamp: Date
}

input SecurityInput {
  id: String!
  displayName: String!
  listedAs: [ListedSecurityInput!]
}

input ListedSecurityInput {
  ticker: String!
  currency: String!
}

type Mutation {
  createSecurity(input: SecurityInput!): Security!
  updateSecurity(id: ID!, input: SecurityInput!): Security!
  """
  Triggers a quote update for the given security IDs. If no security IDs are
  provided, all securities will be updated.
  """
  triggerQuoteUpdate(securityIDs: [String!]): Boolean!
}

type Query {
  security(id: String!): Security
  securities: [Security!]!
}
