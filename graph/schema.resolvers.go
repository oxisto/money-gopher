package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.61

import (
	"context"
	"fmt"

	"github.com/oxisto/money-gopher/db"
	"github.com/oxisto/money-gopher/graph/model"
)

// ID is the resolver for the id field.
func (r *listedSecurityResolver) ID(ctx context.Context, obj *db.ListedSecurity) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Symbol is the resolver for the symbol field.
func (r *listedSecurityResolver) Symbol(ctx context.Context, obj *db.ListedSecurity) (string, error) {
	panic(fmt.Errorf("not implemented: Symbol - symbol"))
}

// Name is the resolver for the name field.
func (r *listedSecurityResolver) Name(ctx context.Context, obj *db.ListedSecurity) (string, error) {
	panic(fmt.Errorf("not implemented: Name - name"))
}

// Security is the resolver for the security field.
func (r *listedSecurityResolver) Security(ctx context.Context, obj *db.ListedSecurity) (*db.Security, error) {
	panic(fmt.Errorf("not implemented: Security - security"))
}

// CreateSecurity is the resolver for the createSecurity field.
func (r *mutationResolver) CreateSecurity(ctx context.Context, input model.NewSecurity) (*db.Security, error) {
	panic(fmt.Errorf("not implemented: CreateSecurity - createSecurity"))
}

// Security is the resolver for the security field.
func (r *queryResolver) Security(ctx context.Context, id string) (*db.Security, error) {
	return r.Queries.GetSecurity(ctx, id)
}

// Securities is the resolver for the securities field.
func (r *queryResolver) Securities(ctx context.Context) ([]*db.Security, error) {
	return r.Queries.ListSecurities(ctx)
}

// Isin is the resolver for the isin field.
func (r *securityResolver) Isin(ctx context.Context, obj *db.Security) (string, error) {
	panic(fmt.Errorf("not implemented: Isin - isin"))
}

// QuoteProvider is the resolver for the quoteProvider field.
func (r *securityResolver) QuoteProvider(ctx context.Context, obj *db.Security) (*string, error) {
	panic(fmt.Errorf("not implemented: QuoteProvider - quoteProvider"))
}

// ListedAs is the resolver for the listedAs field.
func (r *securityResolver) ListedAs(ctx context.Context, obj *db.Security) ([]*db.ListedSecurity, error) {
	panic(fmt.Errorf("not implemented: ListedAs - listedAs"))
}

// ListedSecurity returns ListedSecurityResolver implementation.
func (r *Resolver) ListedSecurity() ListedSecurityResolver { return &listedSecurityResolver{r} }

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

// Security returns SecurityResolver implementation.
func (r *Resolver) Security() SecurityResolver { return &securityResolver{r} }

type listedSecurityResolver struct{ *Resolver }
type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type securityResolver struct{ *Resolver }
